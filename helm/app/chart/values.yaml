appName: "application"

image:
  repository: nginxinc/nginx-unprivileged
  pullPolicy: IfNotPresent
  tag: "latest"

initContainers:
- name: init-first
  image: hello-world:latest
  # command: ["echo 'HELLO!'"]
  securityContext:
    runAsUser: 101
    runAsGroup: 30
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"
- name: init-second
  image: hello-world:latest
  # command: ["echo 'HELLO!'"]
  securityContext:
    runAsUser: 101
    runAsGroup: 30
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"

imagePullSecrets: []

environment_variables:
- name: ENVVARONE
  value: valueone

serviceAccount:
  create: true
  automount: true
  annotations: {}

podAnnotations: {}

podLabels: {}

PodDisruptionBudget:
  create: true
  minAvailable: 2  

podSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 101

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 101

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  protocol: TCP
  name: http

ingress:
  enabled: false
  className: "nginx"
  annotations:
    kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: chart-example-tls
     hosts:
       - chart-example.local

replicaCount: 1

autoscaling:
  enabled: true
  minReplicas: 4
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
